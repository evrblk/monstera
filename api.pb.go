// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: api.proto

package monstera

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RaftState int32

const (
	RaftState_RAFT_STATE_INVALID   RaftState = 0
	RaftState_RAFT_STATE_FOLLOWER  RaftState = 1
	RaftState_RAFT_STATE_LEADER    RaftState = 2
	RaftState_RAFT_STATE_CANDIDATE RaftState = 3
	RaftState_RAFT_STATE_SHUTDOWN  RaftState = 4
)

// Enum value maps for RaftState.
var (
	RaftState_name = map[int32]string{
		0: "RAFT_STATE_INVALID",
		1: "RAFT_STATE_FOLLOWER",
		2: "RAFT_STATE_LEADER",
		3: "RAFT_STATE_CANDIDATE",
		4: "RAFT_STATE_SHUTDOWN",
	}
	RaftState_value = map[string]int32{
		"RAFT_STATE_INVALID":   0,
		"RAFT_STATE_FOLLOWER":  1,
		"RAFT_STATE_LEADER":    2,
		"RAFT_STATE_CANDIDATE": 3,
		"RAFT_STATE_SHUTDOWN":  4,
	}
)

func (x RaftState) Enum() *RaftState {
	p := new(RaftState)
	*p = x
	return p
}

func (x RaftState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaftState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (RaftState) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x RaftState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaftState.Descriptor instead.
func (RaftState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type UpdateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Payload         []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	ShardKey        []byte                 `protobuf:"bytes,2,opt,name=shard_key,json=shardKey,proto3" json:"shard_key,omitempty"`
	ApplicationName string                 `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	KeyspaceName    string                 `protobuf:"bytes,4,opt,name=keyspace_name,json=keyspaceName,proto3" json:"keyspace_name,omitempty"`
	ShardId         string                 `protobuf:"bytes,5,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	ReplicaId       string                 `protobuf:"bytes,6,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Hops            int32                  `protobuf:"varint,8,opt,name=hops,proto3" json:"hops,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpdateRequest) GetShardKey() []byte {
	if x != nil {
		return x.ShardKey
	}
	return nil
}

func (x *UpdateRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *UpdateRequest) GetKeyspaceName() string {
	if x != nil {
		return x.KeyspaceName
	}
	return ""
}

func (x *UpdateRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *UpdateRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *UpdateRequest) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ReadRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Payload                []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	AllowReadFromFollowers bool                   `protobuf:"varint,2,opt,name=allow_read_from_followers,json=allowReadFromFollowers,proto3" json:"allow_read_from_followers,omitempty"`
	ShardKey               []byte                 `protobuf:"bytes,3,opt,name=shard_key,json=shardKey,proto3" json:"shard_key,omitempty"`
	ApplicationName        string                 `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	KeyspaceName           string                 `protobuf:"bytes,5,opt,name=keyspace_name,json=keyspaceName,proto3" json:"keyspace_name,omitempty"`
	ShardId                string                 `protobuf:"bytes,6,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	ReplicaId              string                 `protobuf:"bytes,7,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Hops                   int32                  `protobuf:"varint,8,opt,name=hops,proto3" json:"hops,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ReadRequest) GetAllowReadFromFollowers() bool {
	if x != nil {
		return x.AllowReadFromFollowers
	}
	return false
}

func (x *ReadRequest) GetShardKey() []byte {
	if x != nil {
		return x.ShardKey
	}
	return nil
}

func (x *ReadRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ReadRequest) GetKeyspaceName() string {
	if x != nil {
		return x.KeyspaceName
	}
	return ""
}

func (x *ReadRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ReadRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *ReadRequest) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replicas      []*ReplicaState        `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *HealthCheckResponse) GetReplicas() []*ReplicaState {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type TriggerSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerSnapshotRequest) Reset() {
	*x = TriggerSnapshotRequest{}
	mi := &file_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerSnapshotRequest) ProtoMessage() {}

func (x *TriggerSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerSnapshotRequest.ProtoReflect.Descriptor instead.
func (*TriggerSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *TriggerSnapshotRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

type TriggerSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerSnapshotResponse) Reset() {
	*x = TriggerSnapshotResponse{}
	mi := &file_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerSnapshotResponse) ProtoMessage() {}

func (x *TriggerSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerSnapshotResponse.ProtoReflect.Descriptor instead.
func (*TriggerSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

type LeadershipTransferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeadershipTransferRequest) Reset() {
	*x = LeadershipTransferRequest{}
	mi := &file_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadershipTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadershipTransferRequest) ProtoMessage() {}

func (x *LeadershipTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadershipTransferRequest.ProtoReflect.Descriptor instead.
func (*LeadershipTransferRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *LeadershipTransferRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

type LeadershipTransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeadershipTransferResponse) Reset() {
	*x = LeadershipTransferResponse{}
	mi := &file_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadershipTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadershipTransferResponse) ProtoMessage() {}

func (x *LeadershipTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadershipTransferResponse.ProtoReflect.Descriptor instead.
func (*LeadershipTransferResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

type AddVoterRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId      string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	VoterReplicaId string                 `protobuf:"bytes,2,opt,name=voter_replica_id,json=voterReplicaId,proto3" json:"voter_replica_id,omitempty"`
	VoterAddress   string                 `protobuf:"bytes,3,opt,name=voter_address,json=voterAddress,proto3" json:"voter_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddVoterRequest) Reset() {
	*x = AddVoterRequest{}
	mi := &file_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVoterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoterRequest) ProtoMessage() {}

func (x *AddVoterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVoterRequest.ProtoReflect.Descriptor instead.
func (*AddVoterRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *AddVoterRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *AddVoterRequest) GetVoterReplicaId() string {
	if x != nil {
		return x.VoterReplicaId
	}
	return ""
}

func (x *AddVoterRequest) GetVoterAddress() string {
	if x != nil {
		return x.VoterAddress
	}
	return ""
}

type AddVoterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVoterResponse) Reset() {
	*x = AddVoterResponse{}
	mi := &file_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVoterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoterResponse) ProtoMessage() {}

func (x *AddVoterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVoterResponse.ProtoReflect.Descriptor instead.
func (*AddVoterResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

type ReplicaState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	RaftState     RaftState              `protobuf:"varint,2,opt,name=raft_state,json=raftState,proto3,enum=com.evrblk.monstera.RaftState" json:"raft_state,omitempty"`
	RaftStats     map[string]string      `protobuf:"bytes,3,rep,name=raft_stats,json=raftStats,proto3" json:"raft_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Snapshots     []*RaftSnapshot        `protobuf:"bytes,4,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaState) Reset() {
	*x = ReplicaState{}
	mi := &file_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaState) ProtoMessage() {}

func (x *ReplicaState) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaState.ProtoReflect.Descriptor instead.
func (*ReplicaState) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *ReplicaState) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *ReplicaState) GetRaftState() RaftState {
	if x != nil {
		return x.RaftState
	}
	return RaftState_RAFT_STATE_INVALID
}

func (x *ReplicaState) GetRaftStats() map[string]string {
	if x != nil {
		return x.RaftStats
	}
	return nil
}

func (x *ReplicaState) GetSnapshots() []*RaftSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type RaftSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Term          uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftSnapshot) Reset() {
	*x = RaftSnapshot{}
	mi := &file_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftSnapshot) ProtoMessage() {}

func (x *RaftSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftSnapshot.ProtoReflect.Descriptor instead.
func (*RaftSnapshot) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *RaftSnapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RaftSnapshot) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RaftSnapshot) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RaftSnapshot) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UpdateClusterConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *ClusterConfig         `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterConfigRequest) Reset() {
	*x = UpdateClusterConfigRequest{}
	mi := &file_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterConfigRequest) ProtoMessage() {}

func (x *UpdateClusterConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateClusterConfigRequest) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateClusterConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterConfigResponse) Reset() {
	*x = UpdateClusterConfigResponse{}
	mi := &file_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterConfigResponse) ProtoMessage() {}

func (x *UpdateClusterConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateClusterConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

var File_api_proto protoreflect.FileDescriptor

const file_api_proto_rawDesc = "" +
	"\n" +
	"\tapi.proto\x12\x13com.evrblk.monstera\x1a\n" +
	"raft.proto\x1a\fconfig.proto\"\xe4\x01\n" +
	"\rUpdateRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1b\n" +
	"\tshard_key\x18\x02 \x01(\fR\bshardKey\x12)\n" +
	"\x10application_name\x18\x03 \x01(\tR\x0fapplicationName\x12#\n" +
	"\rkeyspace_name\x18\x04 \x01(\tR\fkeyspaceName\x12\x19\n" +
	"\bshard_id\x18\x05 \x01(\tR\ashardId\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x06 \x01(\tR\treplicaId\x12\x12\n" +
	"\x04hops\x18\b \x01(\x05R\x04hops\"*\n" +
	"\x0eUpdateResponse\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"\x9d\x02\n" +
	"\vReadRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x129\n" +
	"\x19allow_read_from_followers\x18\x02 \x01(\bR\x16allowReadFromFollowers\x12\x1b\n" +
	"\tshard_key\x18\x03 \x01(\fR\bshardKey\x12)\n" +
	"\x10application_name\x18\x04 \x01(\tR\x0fapplicationName\x12#\n" +
	"\rkeyspace_name\x18\x05 \x01(\tR\fkeyspaceName\x12\x19\n" +
	"\bshard_id\x18\x06 \x01(\tR\ashardId\x12\x1d\n" +
	"\n" +
	"replica_id\x18\a \x01(\tR\treplicaId\x12\x12\n" +
	"\x04hops\x18\b \x01(\x05R\x04hops\"(\n" +
	"\fReadResponse\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"\x14\n" +
	"\x12HealthCheckRequest\"T\n" +
	"\x13HealthCheckResponse\x12=\n" +
	"\breplicas\x18\x01 \x03(\v2!.com.evrblk.monstera.ReplicaStateR\breplicas\"7\n" +
	"\x16TriggerSnapshotRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\"\x19\n" +
	"\x17TriggerSnapshotResponse\":\n" +
	"\x19LeadershipTransferRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\"\x1c\n" +
	"\x1aLeadershipTransferResponse\"\x7f\n" +
	"\x0fAddVoterRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12(\n" +
	"\x10voter_replica_id\x18\x02 \x01(\tR\x0evoterReplicaId\x12#\n" +
	"\rvoter_address\x18\x03 \x01(\tR\fvoterAddress\"\x12\n" +
	"\x10AddVoterResponse\"\xbc\x02\n" +
	"\fReplicaState\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12=\n" +
	"\n" +
	"raft_state\x18\x02 \x01(\x0e2\x1e.com.evrblk.monstera.RaftStateR\traftState\x12O\n" +
	"\n" +
	"raft_stats\x18\x03 \x03(\v20.com.evrblk.monstera.ReplicaState.RaftStatsEntryR\traftStats\x12?\n" +
	"\tsnapshots\x18\x04 \x03(\v2!.com.evrblk.monstera.RaftSnapshotR\tsnapshots\x1a<\n" +
	"\x0eRaftStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\fRaftSnapshot\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"X\n" +
	"\x1aUpdateClusterConfigRequest\x12:\n" +
	"\x06config\x18\x01 \x01(\v2\".com.evrblk.monstera.ClusterConfigR\x06config\"\x1d\n" +
	"\x1bUpdateClusterConfigResponse*\x86\x01\n" +
	"\tRaftState\x12\x16\n" +
	"\x12RAFT_STATE_INVALID\x10\x00\x12\x17\n" +
	"\x13RAFT_STATE_FOLLOWER\x10\x01\x12\x15\n" +
	"\x11RAFT_STATE_LEADER\x10\x02\x12\x18\n" +
	"\x14RAFT_STATE_CANDIDATE\x10\x03\x12\x17\n" +
	"\x13RAFT_STATE_SHUTDOWN\x10\x042\xec\t\n" +
	"\vMonsteraApi\x12S\n" +
	"\x06Update\x12\".com.evrblk.monstera.UpdateRequest\x1a#.com.evrblk.monstera.UpdateResponse\"\x00\x12M\n" +
	"\x04Read\x12 .com.evrblk.monstera.ReadRequest\x1a!.com.evrblk.monstera.ReadResponse\"\x00\x12t\n" +
	"\x15AppendEntriesPipeline\x12).com.evrblk.monstera.AppendEntriesRequest\x1a*.com.evrblk.monstera.AppendEntriesResponse\"\x00(\x010\x01\x12h\n" +
	"\rAppendEntries\x12).com.evrblk.monstera.AppendEntriesRequest\x1a*.com.evrblk.monstera.AppendEntriesResponse\"\x00\x12b\n" +
	"\vRequestVote\x12'.com.evrblk.monstera.RequestVoteRequest\x1a(.com.evrblk.monstera.RequestVoteResponse\"\x00\x12_\n" +
	"\n" +
	"TimeoutNow\x12&.com.evrblk.monstera.TimeoutNowRequest\x1a'.com.evrblk.monstera.TimeoutNowResponse\"\x00\x12p\n" +
	"\x0fInstallSnapshot\x12+.com.evrblk.monstera.InstallSnapshotRequest\x1a,.com.evrblk.monstera.InstallSnapshotResponse\"\x00(\x01\x12b\n" +
	"\vHealthCheck\x12'.com.evrblk.monstera.HealthCheckRequest\x1a(.com.evrblk.monstera.HealthCheckResponse\"\x00\x12w\n" +
	"\x12LeadershipTransfer\x12..com.evrblk.monstera.LeadershipTransferRequest\x1a/.com.evrblk.monstera.LeadershipTransferResponse\"\x00\x12n\n" +
	"\x0fTriggerSnapshot\x12+.com.evrblk.monstera.TriggerSnapshotRequest\x1a,.com.evrblk.monstera.TriggerSnapshotResponse\"\x00\x12Y\n" +
	"\bAddVoter\x12$.com.evrblk.monstera.AddVoterRequest\x1a%.com.evrblk.monstera.AddVoterResponse\"\x00\x12z\n" +
	"\x13UpdateClusterConfig\x12/.com.evrblk.monstera.UpdateClusterConfigRequest\x1a0.com.evrblk.monstera.UpdateClusterConfigResponse\"\x00B\x1cZ\x1agithub.com/evrblk/monsterab\x06proto3"

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData []byte
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)))
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_proto_goTypes = []any{
	(RaftState)(0),                      // 0: com.evrblk.monstera.RaftState
	(*UpdateRequest)(nil),               // 1: com.evrblk.monstera.UpdateRequest
	(*UpdateResponse)(nil),              // 2: com.evrblk.monstera.UpdateResponse
	(*ReadRequest)(nil),                 // 3: com.evrblk.monstera.ReadRequest
	(*ReadResponse)(nil),                // 4: com.evrblk.monstera.ReadResponse
	(*HealthCheckRequest)(nil),          // 5: com.evrblk.monstera.HealthCheckRequest
	(*HealthCheckResponse)(nil),         // 6: com.evrblk.monstera.HealthCheckResponse
	(*TriggerSnapshotRequest)(nil),      // 7: com.evrblk.monstera.TriggerSnapshotRequest
	(*TriggerSnapshotResponse)(nil),     // 8: com.evrblk.monstera.TriggerSnapshotResponse
	(*LeadershipTransferRequest)(nil),   // 9: com.evrblk.monstera.LeadershipTransferRequest
	(*LeadershipTransferResponse)(nil),  // 10: com.evrblk.monstera.LeadershipTransferResponse
	(*AddVoterRequest)(nil),             // 11: com.evrblk.monstera.AddVoterRequest
	(*AddVoterResponse)(nil),            // 12: com.evrblk.monstera.AddVoterResponse
	(*ReplicaState)(nil),                // 13: com.evrblk.monstera.ReplicaState
	(*RaftSnapshot)(nil),                // 14: com.evrblk.monstera.RaftSnapshot
	(*UpdateClusterConfigRequest)(nil),  // 15: com.evrblk.monstera.UpdateClusterConfigRequest
	(*UpdateClusterConfigResponse)(nil), // 16: com.evrblk.monstera.UpdateClusterConfigResponse
	nil,                                 // 17: com.evrblk.monstera.ReplicaState.RaftStatsEntry
	(*ClusterConfig)(nil),               // 18: com.evrblk.monstera.ClusterConfig
	(*AppendEntriesRequest)(nil),        // 19: com.evrblk.monstera.AppendEntriesRequest
	(*RequestVoteRequest)(nil),          // 20: com.evrblk.monstera.RequestVoteRequest
	(*TimeoutNowRequest)(nil),           // 21: com.evrblk.monstera.TimeoutNowRequest
	(*InstallSnapshotRequest)(nil),      // 22: com.evrblk.monstera.InstallSnapshotRequest
	(*AppendEntriesResponse)(nil),       // 23: com.evrblk.monstera.AppendEntriesResponse
	(*RequestVoteResponse)(nil),         // 24: com.evrblk.monstera.RequestVoteResponse
	(*TimeoutNowResponse)(nil),          // 25: com.evrblk.monstera.TimeoutNowResponse
	(*InstallSnapshotResponse)(nil),     // 26: com.evrblk.monstera.InstallSnapshotResponse
}
var file_api_proto_depIdxs = []int32{
	13, // 0: com.evrblk.monstera.HealthCheckResponse.replicas:type_name -> com.evrblk.monstera.ReplicaState
	0,  // 1: com.evrblk.monstera.ReplicaState.raft_state:type_name -> com.evrblk.monstera.RaftState
	17, // 2: com.evrblk.monstera.ReplicaState.raft_stats:type_name -> com.evrblk.monstera.ReplicaState.RaftStatsEntry
	14, // 3: com.evrblk.monstera.ReplicaState.snapshots:type_name -> com.evrblk.monstera.RaftSnapshot
	18, // 4: com.evrblk.monstera.UpdateClusterConfigRequest.config:type_name -> com.evrblk.monstera.ClusterConfig
	1,  // 5: com.evrblk.monstera.MonsteraApi.Update:input_type -> com.evrblk.monstera.UpdateRequest
	3,  // 6: com.evrblk.monstera.MonsteraApi.Read:input_type -> com.evrblk.monstera.ReadRequest
	19, // 7: com.evrblk.monstera.MonsteraApi.AppendEntriesPipeline:input_type -> com.evrblk.monstera.AppendEntriesRequest
	19, // 8: com.evrblk.monstera.MonsteraApi.AppendEntries:input_type -> com.evrblk.monstera.AppendEntriesRequest
	20, // 9: com.evrblk.monstera.MonsteraApi.RequestVote:input_type -> com.evrblk.monstera.RequestVoteRequest
	21, // 10: com.evrblk.monstera.MonsteraApi.TimeoutNow:input_type -> com.evrblk.monstera.TimeoutNowRequest
	22, // 11: com.evrblk.monstera.MonsteraApi.InstallSnapshot:input_type -> com.evrblk.monstera.InstallSnapshotRequest
	5,  // 12: com.evrblk.monstera.MonsteraApi.HealthCheck:input_type -> com.evrblk.monstera.HealthCheckRequest
	9,  // 13: com.evrblk.monstera.MonsteraApi.LeadershipTransfer:input_type -> com.evrblk.monstera.LeadershipTransferRequest
	7,  // 14: com.evrblk.monstera.MonsteraApi.TriggerSnapshot:input_type -> com.evrblk.monstera.TriggerSnapshotRequest
	11, // 15: com.evrblk.monstera.MonsteraApi.AddVoter:input_type -> com.evrblk.monstera.AddVoterRequest
	15, // 16: com.evrblk.monstera.MonsteraApi.UpdateClusterConfig:input_type -> com.evrblk.monstera.UpdateClusterConfigRequest
	2,  // 17: com.evrblk.monstera.MonsteraApi.Update:output_type -> com.evrblk.monstera.UpdateResponse
	4,  // 18: com.evrblk.monstera.MonsteraApi.Read:output_type -> com.evrblk.monstera.ReadResponse
	23, // 19: com.evrblk.monstera.MonsteraApi.AppendEntriesPipeline:output_type -> com.evrblk.monstera.AppendEntriesResponse
	23, // 20: com.evrblk.monstera.MonsteraApi.AppendEntries:output_type -> com.evrblk.monstera.AppendEntriesResponse
	24, // 21: com.evrblk.monstera.MonsteraApi.RequestVote:output_type -> com.evrblk.monstera.RequestVoteResponse
	25, // 22: com.evrblk.monstera.MonsteraApi.TimeoutNow:output_type -> com.evrblk.monstera.TimeoutNowResponse
	26, // 23: com.evrblk.monstera.MonsteraApi.InstallSnapshot:output_type -> com.evrblk.monstera.InstallSnapshotResponse
	6,  // 24: com.evrblk.monstera.MonsteraApi.HealthCheck:output_type -> com.evrblk.monstera.HealthCheckResponse
	10, // 25: com.evrblk.monstera.MonsteraApi.LeadershipTransfer:output_type -> com.evrblk.monstera.LeadershipTransferResponse
	8,  // 26: com.evrblk.monstera.MonsteraApi.TriggerSnapshot:output_type -> com.evrblk.monstera.TriggerSnapshotResponse
	12, // 27: com.evrblk.monstera.MonsteraApi.AddVoter:output_type -> com.evrblk.monstera.AddVoterResponse
	16, // 28: com.evrblk.monstera.MonsteraApi.UpdateClusterConfig:output_type -> com.evrblk.monstera.UpdateClusterConfigResponse
	17, // [17:29] is the sub-list for method output_type
	5,  // [5:17] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	file_raft_proto_init()
	file_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
